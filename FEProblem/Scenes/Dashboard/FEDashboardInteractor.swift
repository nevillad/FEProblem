//
//  FEDashboardInteractor.swift
//  FEProblem
//
//  Created by Nevilkumar Lad on 02/02/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FEDashboardBusinessLogic {
    func doFEDashboardDetails(request: FEDashboardModel.FEDashboardDetails.Request)
    func initialise(showLoader: Bool)
}

protocol FEDashboardDataStore {
    //var name: String { get set }
}

class FEDashboardInteractor: FEDashboardBusinessLogic, FEDashboardDataStore {
    var presenter: FEDashboardPresentationLogic?
    var worker: FEDashboardWorker?
    //var name: String = ""

    private var planets: planets = []
    private var vehicles: vehicles = []

    // MARK: Do FEDashboardDetails

    func doFEDashboardDetails(request: FEDashboardModel.FEDashboardDetails.Request)
    {
        worker = FEDashboardWorker()
        worker?.doSomeWork()

        let response = FEDashboardModel.FEDashboardDetails.Response()
        presenter?.presentFEDashboardDetails(response: response)
    }

    func initialise(showLoader: Bool = true) {

    }

    func fetchPlanets() {
        let finalUrl = FEApiActions.Dashboard.getPlanets.urlString
        let resource = Resource<planets>(url: finalUrl)
        debugPrint("Final url is: \(resource.url)")

        FENetworkServices.shared.fetchJson(resource: resource) { result in
            self.presenter?.hideLoader(type: .general)
            switch result {
            case .success(let planets):
                self.planets = planets
                break
            case .failure(let error):
                self.presenter?.presentError(type: .custom(message: error.localizedDescription))
            }
        }
    }

    func fetchVehicles() {
        let finalUrl = FEApiActions.Dashboard.getVehicles.urlString
        let resource = Resource<vehicles>(url: finalUrl)
        debugPrint("Final url is: \(resource.url)")

        FENetworkServices.shared.fetchJson(resource: resource) { result in
            self.presenter?.hideLoader(type: .general)
            switch result {
            case .success(let vehicles):
                self.vehicles = vehicles
                break
            case .failure(let error):
                self.presenter?.presentError(type: .custom(message: error.localizedDescription))
            }
        }
    }
}


// MARK: - WelcomeElement
struct Vehicle: Codable {
    let name: String
    let totalNo, maxDistance, speed: Int

    enum CodingKeys: String, CodingKey {
        case name
        case totalNo = "total_no"
        case maxDistance = "max_distance"
        case speed
    }
}

typealias vehicles = [Vehicle]


// MARK: - WelcomeElement
struct Planet: Codable {
    let name: String
    let distance: Int
}

typealias planets = [Planet]
