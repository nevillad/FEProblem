//
//  ListOptionsInteractor.swift
//  FEProblem
//
//  Created by Nevilkumar Lad on 03/02/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListOptionsBusinessLogic {
    func doListOptionsDetails(request: ListOptionsModel.ListOptionsDetails.Request)
    func initialise(showLoader: Bool)
    func selectItem(index: Int)
}

protocol ListOptionsDataStore {
    var selectionType: SelecionType { get set }
    var items: [Any] { get set }
    var selectedDestination: Destination? { get set }
}


class ListOptionsInteractor: ListOptionsBusinessLogic, ListOptionsDataStore {

    var presenter: ListOptionsPresentationLogic?
    var worker: ListOptionsWorker?

    var selectionType: SelecionType = .selectPlanet
    var items: [Any]  = []
    var selectedDestination: Destination? 

    // MARK: Do ListOptionsDetails
    func doListOptionsDetails(request: ListOptionsModel.ListOptionsDetails.Request)
    {
        worker = ListOptionsWorker()
        worker?.doSomeWork()

        let response = ListOptionsModel.ListOptionsDetails.Response()
        presenter?.presentListOptionsDetails(response: response)
    }

    func initialise(showLoader: Bool = true) {
        presenter?.presentListOptions(response: ListOptionsModel.ListOptions.Response( selectableCell: true, items: self.items, selectedItem: self.selectedDestination))
    }

    func selectItem(index: Int) {
        if items.count > index {
            var _id: Int64?
            if let planets = self.items as? [Planet], let planetID = planets [index]._id {
                _id = planetID

            } else if let vehicles = self.items as? [Vehicle], let vehicleID = vehicles[index]._id {
                _id = vehicleID
            }
            if _id != nil {
                presenter?.presentNextScene(response: ListOptionsModel.NextScene.Response(_id: _id!, selectionType: self.selectionType))
            }

        }
    }

}
